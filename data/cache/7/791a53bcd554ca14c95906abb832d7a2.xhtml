
<h1 class="sectionedit1" id="howto_debian_ubuntu_linux_auto_mount_windows_ntfs_file_system_ntfs-3g">HowTo Debian/Ubuntu Linux Auto Mount Windows NTFS File System [ntfs-3g]</h1>
<div class="level1">

<p>
Dual booting MS-Windows with a Debian / Ubuntu Linux desktop. &lt;ount a drive containing a MS-Windows NTFS file system on a Linux based systems
</p>

<p>
The New Technology File System (NTFS) is a file system developed by Microsoft in 1995 with Windows NT. You can easily auto mount a hard disk drive partition containing a NTFS using the following method on any modern Linux desktop.
</p>
<pre class="code">/dev/sdb1 = NTFS partition (use fdisk -l command to find out NTFS partitions names)
Linux user id = 1000 (koos)
Linux group id = 1000 (koos)
Linux mount point = /mnt/ntfs
Required package : ntfs-3g (3rd generation read/write NTFS driver
A note about ntfs-3g</pre>

<p>
Type the following apt-get command to install the same:
</p>

<p>
  sudo apt-get install ntfs-3g
</p>

<p>
Sample outputs:
</p>
<pre class="code">Fig.01: Install the ntfs-3g package from the official repositories on a Debian/Ubuntu 
Fig.01: Install the ntfs-3g package from the official repositories on a Debian/Ubuntu</pre>

<p>
Auto mounting a drive containing a Windows (NTFS) file system using /etc/fstab
</p>

<p>
The file /etc/fstab contains descriptive information about the various file systems. You need to edit this file and append the following information.
</p>

<p>
<strong>Step 1: Edit /etc/fstab</strong>
Open the terminal application and type the following command:
</p>
<pre class="code">sudo vi /etc/fstab</pre>

<p>
<strong>Step 2: Append the following configuration</strong>
</p>

<p>
  /dev/sdb1 /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0
</p>

<p>
A note about the /dev/sdb1 device name
If /deb/sdb1 path will change due to system configuration, I recommend that you use the UUID (Universally Unique Identifier) of the partition. To find the UUID of /dev/sdb1, enter:
</p>
<pre class="code">sudo blkid  /dev/sdb1</pre>

<p>
Note down the UUID value and update /etc/fstab as follows:
</p>
<pre class="code"># syntax
# UUID=&quot;YOUR-UID-HERE&quot; /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0
UUID=&quot;c2dbc0c5-a8fc-439e-aa93-51b0a61372e8&quot; /mnt/ntfs/ ntfs nls-utf8,umask-0222,uid-1000,gid-1000,ro 0 0</pre>

<p>
Save and close the file.
</p>

<p>
<strong>Step 3: Create the /mnt/ntfs/ directory</strong>
Type the following mkdir command:
</p>
<pre class="code">sudo mkdir -p /mnt/ntfs/</pre>

<p>
<strong>Step 4: Test it</strong>
Type the following command:
</p>
<pre class="code">sudo mount -a
df -h
cd /mnt/ntfs/
ls -l
cp -v &quot;My File Name.Doc&quot; $HOME</pre>

<p>
<strong>Step 5: Unmount NTFS partion</strong>
Type the following command:
</p>

<p>
  sudo umount /mnt/ntfs
<strong>## OR ##</strong>
</p>
<pre class="code">sudo umount /deb/sdb1</pre>

<p>
Optional: Manual mounting using ntfs-3g cli option
</p>

<p>
The syntax is as follows to mount /dev/sdb1 to /mnt/ntfs/:
</p>
<pre class="code">sudo mkdir -p /mnt/ntfs</pre>

<p>
Mount it:
</p>

<p>
  ntfs-3g /dev/sdb1 /mnt/ntfs
</p>

<p>
<strong>OR</strong>
</p>
<pre class="code">mount -t ntfs-3g /dev/sdb1 /mnt/ntfs</pre>

<p>
You can mount the ntfs data partition /dev/sda3 to /mnt/data with standard Linux permissions applied :
</p>
<ul>
<li class="level1"><div class="li">*ntfs-3g -o permissions /dev/sda3 /mnt/data<strong>
  
You can do read-only mount /dev/sda5 to /home/user/mnt and make user with uid 1000 to be the owner of all files:
 
 </strong>ntfs-3g -o ro,uid=1000 /dev/sda5 /home/user/mnt**</div>
</li>
</ul>

</div>
