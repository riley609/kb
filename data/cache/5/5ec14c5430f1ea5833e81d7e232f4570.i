a:28:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:64:"How to revert (roll back) to a previous revision with Subversion";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:227:"You would think that reverting to a previous version of your application would be one of the key use cases for a version control system like Subversion and that it would be trivial to do, but it's actually not intuitive at all.";}i:2;i:82;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:309;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:309;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:340:"When I was first starting out with Subversion, I thought there would be a revert command that took a revision as an argument and basically rolled back your application to revision X. Alas, there is a revert command in SVN, but instead of reverting to a previous revision, it works to undo any local changes you've made to your working copy.";}i:2;i:311;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:651;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:651;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:189:"Here, then, is a very simple, plain English explanation of how to revert to a previous version of your application in Subversion, to help anyone who may be starting out with it and is lost.";}i:2;i:653;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:842;}i:12;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:842;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:300:"To revert to a previous version of your application (roll back changes) in Subversion, you merge the changes from your current revision back to the revision you want to revert to. So, for example, if you want to revert the trunk of your application from revision 73 to 68, you would do the following:";}i:2;i:844;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1145;}i:15;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:178:"  svn merge --dry-run -r:73:68 http://my.repository.com/my/project/trunk
  svn merge -r:73:68 http://my.repository.com/my/project/trunk
  svn commit -m "Reverted to revision 68."";}i:2;i:1145;}i:16;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1145;}i:17;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:139:"Step 1 will perform a dry run and show you what the merge will produce. If you want to see exactly what changes will be applied, do a diff:";}i:2;i:1332;}i:18;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1472;}i:19;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:54:"  svn diff -r:73:68 http://svn.viamedia.co.za/svn/XXXX";}i:2;i:1472;}i:20;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1472;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:421:"Step 2 actually performs the merge (you'd do this after you're happy with the dry run). At this point, realize what is happening: Subversion is calculating the changes between revision 73 and revision 68 of the trunk and applying them to your working copy. For the majority of the time, you will thus want your working copy to be a fully updated copy of the revision you are reverting from (in this example, revision 73).";}i:2;i:1531;}i:22;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1952;}i:23;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1952;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:111:"Finally, since the merge happens on your local working copy, you need to commit it to the repository in Step 3.";}i:2;i:1954;}i:25;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2065;}i:26;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2066;}i:27;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:2066;}}